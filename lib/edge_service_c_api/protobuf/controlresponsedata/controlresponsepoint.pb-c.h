/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: controlresponsepoint.proto */

#ifndef PROTOBUF_C_controlresponsepoint_2eproto__INCLUDED
#define PROTOBUF_C_controlresponsepoint_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Controlresponsedata__ControlResponsePoint Controlresponsedata__ControlResponsePoint;
typedef struct _Controlresponsedata__ControlResponsePoints Controlresponsedata__ControlResponsePoints;


/* --- enums --- */


/* --- messages --- */

struct  _Controlresponsedata__ControlResponsePoint
{
  ProtobufCMessage base;
  char *requestid;
  char *messageid;
  char *requestmethod;
  char *calltype;
  char *controlchannelid;
  char *productkey;
  char *devicekey;
  char *assetid;
  char *servicename;
  char *serviceid;
  char *callbackurl;
  char *inputdata;
  char *outputdata;
  int64_t status;
  char *msg;
  char *submsg;
  int64_t timeout;
  int64_t gmtservicerequest;
  int64_t gmtservicereply;
  int64_t gmtdevicereply;
  char *attr;
};
#define CONTROLRESPONSEDATA__CONTROL_RESPONSE_POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&controlresponsedata__control_response_point__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, 0, 0, 0, 0, NULL }


struct  _Controlresponsedata__ControlResponsePoints
{
  ProtobufCMessage base;
  size_t n_points;
  Controlresponsedata__ControlResponsePoint **points;
};
#define CONTROLRESPONSEDATA__CONTROL_RESPONSE_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&controlresponsedata__control_response_points__descriptor) \
    , 0,NULL }


/* Controlresponsedata__ControlResponsePoint methods */
void   controlresponsedata__control_response_point__init
                     (Controlresponsedata__ControlResponsePoint         *message);
size_t controlresponsedata__control_response_point__get_packed_size
                     (const Controlresponsedata__ControlResponsePoint   *message);
size_t controlresponsedata__control_response_point__pack
                     (const Controlresponsedata__ControlResponsePoint   *message,
                      uint8_t             *out);
size_t controlresponsedata__control_response_point__pack_to_buffer
                     (const Controlresponsedata__ControlResponsePoint   *message,
                      ProtobufCBuffer     *buffer);
Controlresponsedata__ControlResponsePoint *
       controlresponsedata__control_response_point__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   controlresponsedata__control_response_point__free_unpacked
                     (Controlresponsedata__ControlResponsePoint *message,
                      ProtobufCAllocator *allocator);
/* Controlresponsedata__ControlResponsePoints methods */
void   controlresponsedata__control_response_points__init
                     (Controlresponsedata__ControlResponsePoints         *message);
size_t controlresponsedata__control_response_points__get_packed_size
                     (const Controlresponsedata__ControlResponsePoints   *message);
size_t controlresponsedata__control_response_points__pack
                     (const Controlresponsedata__ControlResponsePoints   *message,
                      uint8_t             *out);
size_t controlresponsedata__control_response_points__pack_to_buffer
                     (const Controlresponsedata__ControlResponsePoints   *message,
                      ProtobufCBuffer     *buffer);
Controlresponsedata__ControlResponsePoints *
       controlresponsedata__control_response_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   controlresponsedata__control_response_points__free_unpacked
                     (Controlresponsedata__ControlResponsePoints *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Controlresponsedata__ControlResponsePoint_Closure)
                 (const Controlresponsedata__ControlResponsePoint *message,
                  void *closure_data);
typedef void (*Controlresponsedata__ControlResponsePoints_Closure)
                 (const Controlresponsedata__ControlResponsePoints *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor controlresponsedata__control_response_point__descriptor;
extern const ProtobufCMessageDescriptor controlresponsedata__control_response_points__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_controlresponsepoint_2eproto__INCLUDED */
